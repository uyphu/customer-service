{
	"info": {
		"_postman_id": "2cd1c85f-cd43-45b0-8893-f71996d1c7c3",
		"name": "Customer-API-Test-Cases",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "01. Create Customer - Valid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Body matches phule@example.com\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"phule@example.com\");",
							"});",
							"",
							"pm.test(\"Tier should be Silver\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.tier).to.eql(\"Silver\");",
							"",
							"    pm.globals.set(\"customerId\", jsonData.id);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Phu Le\",\n  \"email\": \"phule@example.com\",\n  \"annualSpend\": 999,\n  \"lastPurchaseDate\": \"2025-06-03T01:42:07\"\n}"
				},
				"url": {
					"raw": "localhost:8080/customers",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"customers"
					]
				}
			},
			"response": []
		},
		{
			"name": "02. Create Customer - Name Exists",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Body matches phule@example.com\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"phule2@example.com\");",
							"});",
							"",
							"pm.test(\"Tier should be Silver\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.tier).to.eql(\"Silver\");",
							"",
							"    pm.globals.set(\"customerIdWithNameExists\", jsonData.id);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Phu Le\",\n  \"email\": \"phule2@example.com\",\n  \"annualSpend\": 900,\n  \"lastPurchaseDate\": \"2025-06-03T01:42:07\"\n}"
				},
				"url": {
					"raw": "localhost:8080/customers",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"customers"
					]
				}
			},
			"response": []
		},
		{
			"name": "03. Create Customer - Email Exists",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Body matches phule@example.com\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"phule@example.com\");",
							"});",
							"",
							"pm.test(\"Tier should be Gold\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.tier).to.eql(\"Gold\");",
							"",
							"    pm.globals.set(\"customerIdWithEmailExists\", jsonData.id);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Phu Le2\",\n  \"email\": \"phule@example.com\",\n  \"annualSpend\": 1000,\n  \"lastPurchaseDate\": \"2025-06-03T01:42:07\"\n}"
				},
				"url": {
					"raw": "localhost:8080/customers",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"customers"
					]
				}
			},
			"response": []
		},
		{
			"name": "03a. Create Customer - Missing Email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Error should be email: must not be blank\", function () {",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData);",
							"    pm.expect(jsonData[0].error).to.include(\"email: must not be blank\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Phu Le2\",\n  \"annualSpend\": 1000,\n  \"lastPurchaseDate\": \"2025-06-03T01:42:07\"\n}"
				},
				"url": {
					"raw": "localhost:8080/customers",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"customers"
					]
				}
			},
			"response": []
		},
		{
			"name": "03b. Create Customer - Missing Name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Error should be email: must not be blank\", function () {",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData);",
							"    pm.expect(jsonData[0].error).to.include(\"name: must not be blank\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"phule@example.com\",\n  \"annualSpend\": 999,\n  \"lastPurchaseDate\": \"2025-06-03T01:42:07\"\n}"
				},
				"url": {
					"raw": "localhost:8080/customers",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"customers"
					]
				}
			},
			"response": []
		},
		{
			"name": "03c. Create Customer - Invalid Email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Error should be email: must not be blank\", function () {",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData);",
							"    pm.expect(jsonData[0].error).to.include(\"email: must be a well-formed email address\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Phu Le\",\n  \"email\": \"invalid\",\n  \"annualSpend\": 999,\n  \"lastPurchaseDate\": \"2025-06-03T01:42:07\"\n}"
				},
				"url": {
					"raw": "localhost:8080/customers",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"customers"
					]
				}
			},
			"response": []
		},
		{
			"name": "04. Get Customer by ID - Valid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Email: phule@example.com\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.email).to.eql(\"phule@example.com\");",
							"});",
							"",
							"pm.test(\"Name: Phu Le\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(\"Phu Le\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "localhost:8080/customers/{{customerId}}",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"customers",
						"{{customerId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "04a. Get Customer by Name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Email: phule@example.com\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.email).to.eql(\"phule@example.com\");",
							"});",
							"",
							"pm.test(\"Name: Phu Le\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(\"Phu Le\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "localhost:8080/customers?name=Phu Le",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"customers"
					],
					"query": [
						{
							"key": "name",
							"value": "Phu Le"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "04b. Get Customer by Email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Email: phule@example.com\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.email).to.eql(\"phule@example.com\");",
							"});",
							"",
							"pm.test(\"Name: Phu Le\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(\"Phu Le\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "localhost:8080/customers?email=phule@example.com",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"customers"
					],
					"query": [
						{
							"key": "email",
							"value": "phule@example.com"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "04c. Get Customer by Invalid Param",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"pm.test(\"Error should be At least one parameter (name or email) must be provided\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.error).to.eql(\"At least one parameter (name or email) must be provided\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "localhost:8080/customers?invalid=phule@example.com",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"customers"
					],
					"query": [
						{
							"key": "invalid",
							"value": "phule@example.com"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "05. Get Customer by ID - Not Found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Error should be Customer not found\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.error).to.eql(\"Customer not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "localhost:8080/customers/57d1e01e-480b-46b3-b300-639ccda440d6",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"customers",
						"57d1e01e-480b-46b3-b300-639ccda440d6"
					]
				}
			},
			"response": []
		},
		{
			"name": "06. Update Customer by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Body matches phule.updated@example.com\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"phule.updated@example.com\");",
							"});",
							"",
							"pm.test(\"Tier should be Gold\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.tier).to.eql(\"Silver\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Phu Le Updated\",\n  \"email\": \"phule.updated@example.com\",\n  \"annualSpend\": 998,\n  \"lastPurchaseDate\": \"2024-06-04T01:42:07\"\n}"
				},
				"url": {
					"raw": "localhost:8080/customers/{{customerId}}",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"customers",
						"{{customerId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "06a. Update Customer by ID Not Found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Error should be Customer not found\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.error).to.eql(\"Customer not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Phu Le Updated\",\n  \"email\": \"phule.updated@example.com\",\n  \"annualSpend\": 5000,\n  \"lastPurchaseDate\": \"2024-06-04T01:42:07\"\n}"
				},
				"url": {
					"raw": "localhost:8080/customers/0757bd30-c957-42ea-9cb5-6c73928d32ce",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"customers",
						"0757bd30-c957-42ea-9cb5-6c73928d32ce"
					]
				}
			},
			"response": []
		},
		{
			"name": "07. Delete Customer by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "localhost:8080/customers/{{customerId}}",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"customers",
						"{{customerId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "07a. Delete Customer by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "localhost:8080/customers/{{customerIdWithNameExists}}",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"customers",
						"{{customerIdWithNameExists}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "07b. Delete Customer by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "localhost:8080/customers/{{customerIdWithEmailExists}}",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"customers",
						"{{customerIdWithEmailExists}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "07c. Delete Customer by ID Not Found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Error should be Customer not found\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.error).to.eql(\"Customer not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "localhost:8080/customers/0757bd30-c957-42ea-9cb5-6c73928d32ce",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"customers",
						"0757bd30-c957-42ea-9cb5-6c73928d32ce"
					]
				}
			},
			"response": []
		},
		{
			"name": "08. Tier Calculation - Silver",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Tier should be Silver\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.tier).to.eql(\"Silver\");",
							"    pm.globals.set(\"silverCustomerId\", jsonData.id);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let now = new Date();",
							"pm.variables.set(\"silverDate\", now.toISOString());",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"TierSilver\",\n  \"email\": \"tiersilver@example.com\",\n  \"annualSpend\": 999,\n  \"lastPurchaseDate\": \"{{silverDate}}\"\n}"
				},
				"url": {
					"raw": "localhost:8080/customers",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"customers"
					]
				}
			},
			"response": []
		},
		{
			"name": "09. Get Silver Customer by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Email: tiersilver@example.com\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.email).to.eql(\"tiersilver@example.com\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "localhost:8080/customers/{{silverCustomerId}}",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"customers",
						"{{silverCustomerId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "10. Delete Silver Customer by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "localhost:8080/customers/{{silverCustomerId}}",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"customers",
						"{{silverCustomerId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "11. Tier Calculation - Gold",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Tier should be Gold\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.tier).to.eql(\"Gold\");",
							"    pm.globals.set(\"goldCustomerId\", jsonData.id);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let now = new Date();",
							"let sixMonthsAgo = new Date(now.setMonth(now.getMonth() - 11));",
							"pm.variables.set(\"goldDate\", sixMonthsAgo.toISOString());"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"TierGold\",\n  \"email\": \"tiergold@example.com\",\n  \"annualSpend\": 5000,\n  \"lastPurchaseDate\": \"{{goldDate}}\"\n}"
				},
				"url": {
					"raw": "localhost:8080/customers",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"customers"
					]
				}
			},
			"response": []
		},
		{
			"name": "12. Get GOLD Customer by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Email: tiergold@example.com\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.email).to.eql(\"tiergold@example.com\");",
							"});",
							"",
							"pm.test(\"Tier should be Gold\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.tier).to.eql(\"Gold\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "localhost:8080/customers/{{goldCustomerId}}",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"customers",
						"{{goldCustomerId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "13. Delete GOLD Customer by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "localhost:8080/customers/{{goldCustomerId}}",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"customers",
						"{{goldCustomerId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "14. Tier Calculation - Platinum",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Tier should be Platinum\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.tier).to.eql(\"Platinum\");",
							"    pm.globals.set(\"platinumCustomerId\", jsonData.id);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let now = new Date();",
							"let sixMonthsAgo = new Date(now.setMonth(now.getMonth() - 5));",
							"pm.variables.set(\"platinumDate\", sixMonthsAgo.toISOString());"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"TierPlatinum\",\n  \"email\": \"tierplatinum@example.com\",\n  \"annualSpend\": 15000,\n  \"lastPurchaseDate\": \"{{platinumDate}}\"\n}"
				},
				"url": {
					"raw": "localhost:8080/customers",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"customers"
					]
				}
			},
			"response": []
		},
		{
			"name": "15. Get Platinum Customer by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Email: tierplatinum@example.com\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.email).to.eql(\"tierplatinum@example.com\");",
							"});",
							"",
							"pm.test(\"Tier should be Gold\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.tier).to.eql(\"Platinum\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "localhost:8080/customers/{{platinumCustomerId}}",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"customers",
						"{{platinumCustomerId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "16. Delete Platinum Customer by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "localhost:8080/customers/{{platinumCustomerId}}",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"customers",
						"{{platinumCustomerId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "17. Cannot Create Tier Calculation - Platinum",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Tier should be Gold\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.tier).to.eql(\"Gold\");",
							"    pm.globals.set(\"platinum6CustomerId\", jsonData.id);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let now = new Date();",
							"let more6MonthsAgo = new Date(now.setMonth(now.getMonth() - 7));",
							"pm.variables.set(\"platinumMore6Date\", more6MonthsAgo.toISOString());"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"TierPlatinum\",\n  \"email\": \"tierplatinum@example.com\",\n  \"annualSpend\": 15000,\n  \"lastPurchaseDate\": \"{{platinumMore6Date}}\"\n}"
				},
				"url": {
					"raw": "localhost:8080/customers",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"customers"
					]
				}
			},
			"response": []
		},
		{
			"name": "17a. Get Gold Customer by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Email: tierplatinum@example.com\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.email).to.eql(\"tierplatinum@example.com\");",
							"});",
							"",
							"pm.test(\"Tier: Gold\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.tier).to.eql(\"Gold\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "localhost:8080/customers/{{platinum6CustomerId}}",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"customers",
						"{{platinum6CustomerId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "17b. Delete Gold Customer by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "localhost:8080/customers/{{platinum6CustomerId}}",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"customers",
						"{{platinum6CustomerId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "18. Cannot Create Tier Calculation - Gold",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Tier should be Silver\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.tier).to.eql(\"Silver\");",
							"    pm.globals.set(\"gold12CustomerId\", jsonData.id);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let now = new Date();",
							"let more12MonthsAgo = new Date(now.setMonth(now.getMonth() - 13));",
							"pm.variables.set(\"gold12Date\", more12MonthsAgo.toISOString());"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"TierPlatinum\",\n  \"email\": \"tierplatinum@example.com\",\n  \"annualSpend\": 5000,\n  \"lastPurchaseDate\": \"{{gold12Date}}\"\n}"
				},
				"url": {
					"raw": "localhost:8080/customers",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"customers"
					]
				}
			},
			"response": []
		},
		{
			"name": "18a. Get Silver Customer by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Email: tierplatinum@example.com\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.email).to.eql(\"tierplatinum@example.com\");",
							"});",
							"",
							"pm.test(\"Tier: Silver\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.tier).to.eql(\"Silver\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "localhost:8080/customers/{{gold12CustomerId}}",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"customers",
						"{{gold12CustomerId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "18b. Delete Silver Customer by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "localhost:8080/customers/{{gold12CustomerId}}",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"customers",
						"{{gold12CustomerId}}"
					]
				}
			},
			"response": []
		}
	]
}